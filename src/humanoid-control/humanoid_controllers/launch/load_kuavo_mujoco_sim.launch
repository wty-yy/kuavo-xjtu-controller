<?xml version="1.0" ?>

<launch>

    <!-- 输出日志格式 -->
    <env name="ROSCONSOLE_FORMAT" value="[${severity} ][${time:%Y-%m-%d-%H:%M:%S}][${node}]: ${message}"/>

    <arg name="output_system_info" default="true"/>
    <arg name="vr_remote_control" default="false"/>
    <arg name="robot_type"         default="humanoid"/>
    <arg name="rviz"                default="true" />
    <arg name="multiplot"          default="false"/>
    <arg name="robot_version"      default="$(optenv ROBOT_VERSION 40)"/>
    <!-- load the robot version manager -->
    <include file="$(find humanoid_controllers)/launch/robot_version_manager.launch">
      <arg name="robot_version" value="$(arg robot_version)"/>
      <arg name="rviz" value="$(arg rviz)"/>
    </include>

    <arg name="use_external_mpc"   default="true"/>
    <arg name="wbc_frequency"      default="500"/>
    <arg name="sensor_frequency"   default="500"/>
    <arg name="use_joystick"       default="true"/>
    <arg name="with_estimation"    default="true"/>
    <arg name="use_joint_filter"   default="false"/>
    <arg name="estimator_type"     default="1"/>
    <arg name="wbc_only"           default="false"/>
    <arg name="play_back"          default="false"/>  
    <arg name="joystick_type"      default="bt2"/>
    <arg name="arm_move_spd"      default="3.0"/>
    <arg name="start_way"          default="manual"/>

    <!-- multiplot -->
    <group if="$(arg multiplot)">
      <include file="$(find humanoid_interface_ros)/launch/multiplot.launch"/>
    </group>

    <!-- make the files into global parameters -->
    <param name="multiplot"         value="$(arg multiplot)"/>
    <param name="wbc_only"          value="$(arg wbc_only)"/>
    <param name="use_external_mpc"  value="$(arg use_external_mpc)"/>
    <param name="wbc_frequency"     value="$(arg wbc_frequency)"/>
    <param name="sensor_frequency"  value="$(arg sensor_frequency)"/>
    <param name="with_estimation"   value="$(arg with_estimation)"/>
    <param name="use_joint_filter"  value="$(arg use_joint_filter)"/>
    <param name="estimator_type"    value="$(arg estimator_type)"/>
    <param name="play_back"         value="$(arg play_back)"/>
    <param name="joystick_type"  value="$(arg joystick_type)"/>
    <param name="arm_move_spd"  value="$(arg arm_move_spd)"/>
    <param name="start_way"  value="$(arg start_way)"/>
    <param name="build_cppad_state"   value="0"/>  <!-- build_cppad_state is set to 0(waiting), 1(building), 2(done) -->
    <!-- mpc node -->
    <group if="$(arg use_external_mpc)">
      <node pkg="humanoid_interface_ros" type="humanoid_sqp_mpc" name="humanoid_sqp_mpc" output="screen" required="true" launch-prefix="$(find humanoid_controllers)/scripts/start_node.sh"/>
    </group>
    <!-- <group unless="$(arg use_joystick)"> -->
      <node pkg="humanoid_interface_ros" type="humanoid_target_with_arm" name="humanoid_target_with_arm"
            output="screen" launch-prefix="gnome-terminal --"/>

      <node pkg="humanoid_interface_ros" type="humanoid_gait_command" name="humanoid_gait_command"
            output="screen" launch-prefix="gnome-terminal --"/>
    <!-- </group> -->

    <node pkg="humanoid_interface_ros" type="humanoid_hand_control" name="humanoid_hand_control" output="screen" launch-prefix=""/>
    <node pkg="humanoid_interface_ros" type="humanoid_VR_hand_control" name="humanoid_VR_hand_control" output="screen" launch-prefix=""/>
    <node pkg="humanoid_interface_ros" type="humanoid_quest_control_with_arm" name="humanoid_quest_control_with_arm" output="screen"/>

    <node pkg="humanoid_interface_ros" type="humanoid_Arm_time_target_control" name="humanoid_Arm_time_target_control" output="screen"/>


    <!-- nodelet manager -->
    <node pkg="nodelet" type="nodelet" name="nodelet_manager" args="manager" respawn="false" 
       output="screen" required="true" clear_params="true"
       launch-prefix="$(find humanoid_controllers)/scripts/start_node.sh">
        <param name="num_worker_threads" type="int" value="10" />
    </node>
    <node pkg="nodelet" type="nodelet" name="nodelet_controller" args="load HumanoidControllerNodelet nodelet_manager" respawn="false" output="screen" required="true">
      </node>

    <group unless="$(arg play_back)">
      <include file="$(find mujoco_cpp)/launch/nodelet_with_arm.launch"/>
    </group>
      <include file="$(find humanoid_interface)/launch/rosbag_nodelet.launch"/>
   <group if="$(arg use_joystick)">
      <group if="$(eval arg('joystick_type') == 'h12')">
        <include file="$(find humanoid_controllers)/launch/joy/joy_control_h12.launch">
          <arg name="start_way" value="$(arg start_way)"/>
        </include>
      </group>
      <group unless="$(eval arg('joystick_type') == 'h12')">
        <include file="$(find humanoid_controllers)/launch/joy/joy_control_bt.launch">
          <arg name="joystick_type" value="$(arg joystick_type)"/>
        </include>
      </group>
    </group>

    <!--publish system state  -->
    <group if="$(arg output_system_info)">
      <node pkg="humanoid_controllers" type="system_info_publisher.py" name="system_info_publisher"/>
    </group>
    <!-- monitor node -->
    <node pkg="kuavo_monitor" type="kuavo_monitor_node" name="kuavo_monitor_node" />

    <group if="$(arg vr_remote_control)">
      <include file="$(find noitom_hi5_hand_udp_python)/launch/launch_quest3_ik.launch"/>
    </group>
</launch>
